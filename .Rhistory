demo()
install(base)
packages.install("base")
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
quit
exit
out
install.packages("Rserve")
q()
swirl()
library("swirl")
local({fn<-choose.files(filters=Filters[c('R','txt','All'),],index=4)
file.show(fn,header=fn,title='')})
> install.packages("swirl")
install.packages("swirl")
library("swirl"9
library("swirl")
swirl()
5+7
x<-5+7
x
y<-x-3
y
z-<c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
>>
c(z,555,z)
z*2+100
mysqrt<-sqrt(z-1)
mySqrt<-sqrt(z-1)
mysqrt
mySqrt
myDiv<-z/mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
1:20
pi:10
15:1
":"
?':'
':'
?':'
info()
?`:`
seq(1,20)
seq(0,10,by=0,5)
seq(0,10,by=0.5)
seq(5,30,lenght=30)
seq(5,30,length=30)
seq(5,10,length=30)
myseq<-seq(5,10,length=30)
mySeq<-seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
lenght(my_seq)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seqalong(my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),EACH=10)
rep(c(0,1,2),each=10)
bye()
q()
swirl()
library("swirl")
swirl()
q()
library(swirl)
swirl()
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
bye()
quit()
get(wd)
getwd()
q()
library(swirl)
swirl()
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
tf<-num_vect>=6
num_vect>=6
my_char<-c("My","name","is")
my_char
q()
library(swirl)
rm(list=ls())
swirl()
x
x[1:10]
x[is.na(x)]
y<-x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
[!is.na(x) & x >0]
x[!is.na(x) & x>0]
--
--
v
c()
c(3,5,7)
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
q
q
q()
install.packages("kernlab")
library(kernlab)
data(spam)
summary(spam)
str(spam)
str(spam[,1:5])
install.packages("knitr")
library(knitr)
getwd
getwd()
q()
library(knitr)
q()
q()
install.packages(rCharts)
install.packages("rCharts")
require(devtools)
install_github('rCharts', 'ramnathv')
require(devtools)
install.packages(devtools)
install.packages("devtools")
install_github('rCharts', 'ramnathv')
library(devtools)
require(devtools)
install_github('rCharts', 'ramnathv')
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
require(rCharts)
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
options(RCHART_TEMPLATE = 'Rickshaw.html')
#specify the data
data = data.frame(
c( 0, 1, 2, 3 ),
c( 40, 49, 17, 42 ),
stringsAsFactors = FALSE
)
colnames(data) <- c("x","y")
#build the plot
r1 <- Rickshaw$new()
r1$layer(
y ~ x,
data = data,
type = "area",
colors= "steelblue",
height = 240,
width = 540
)
#turn off all the nice built in features
#to match the sparse first example
r1$set(
hoverDetail = FALSE,
xAxis = FALSE,
yAxis = FALSE,
shelving = FALSE,
legend = FALSE,
slider = FALSE,
highlight = FALSE
)
#r1
q()
Q()
q()
unzip(https://archive.ics.uci.edu/ml/machine-learning-databases/00235/household_power_consumption.zip)
unzip("https://archive.ics.uci.edu/ml/machine-learning-databases/00235/household_power_consumption.zip")
url="https://archive.ics.uci.edu/ml/machine-learning-databases/00235/household_power_consumption.zip"
unzip(url)
download.file(https://archive.ics.uci.edu/ml/machine-learning-databases/00235/household_power_consumption.zip)
download.file(url)
download.file(url,"C:\\Users")
download.file(url,"C:\\Users\\R")
download.file(url,"C:\\Users\\Documents\\R")
download.file(url,"C:\\Users\\Carlo\\Documents\\R")
q()
getwd
getwd()
setwd("C:\\Users\\Carlo\\Documents\\GitHub\\RepData_PeerAssessment1")
setwd(C:\\Users\\Carlo\\Documents\\GitHub\\RepData_PeerAssessment1)
setwd("C:\\Users\\Carlo\\Documents\\GitHub\\RepData_PeerAssessment1")
setwd("C:\\Users\\Carlo\\Documents\\GitHub\\RepData_PeerAssessment1")
raw<-read.csv("activity.csv")
---
"Assignment:Reproducible research"
author: "Carlo Bonini"
date: "Friday, July 18, 2014"
output: html_document
---
Here is the preprocessing code:
